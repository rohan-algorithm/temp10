{"ast":null,"code":"var _jsxFileName = \"/Users/rohanrao/Downloads/elitefit1-main/src/components/TaskColumn.js\",\n  _s = $RefreshSig$();\n// TaskColumn.js\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { useDrop } from 'react-dnd';\nimport './TaskColumn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskColumn = ({\n  status,\n  tasks,\n  setTasks,\n  todos,\n  inProgress,\n  closed\n}) => {\n  _s();\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"task\",\n    drop: item => addItemToColumn(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  let tasksByStatus = todos;\n  if (status === \"Overdue\") tasksByStatus = inProgress;\n  if (status === \"Completed\") tasksByStatus = closed;\n  tasksByStatus = tasksByStatus || [];\n  const addItemToColumn = id => {\n    setTasks(prevTasks => {\n      const updatedTasks = prevTasks.map(task => task.id === id ? {\n        ...task,\n        status\n      } : task);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n      return updatedTasks;\n    });\n  };\n\n  // Dynamic class based on status\n  const columnClass = `col ${status.toLowerCase()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: columnClass,\n    ref: drop,\n    style: {\n      backgroundColor: isOver ? '#f0f8ff' : ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: status.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskList\",\n      children: tasksByStatus.length > 0 ? tasksByStatus.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        tasks: tasks,\n        setTasks: setTasks\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-column\",\n        children: \"No tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskColumn, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n_c = TaskColumn;\nexport default TaskColumn;\nvar _c;\n$RefreshReg$(_c, \"TaskColumn\");","map":{"version":3,"names":["React","TaskItem","useDrop","jsxDEV","_jsxDEV","TaskColumn","status","tasks","setTasks","todos","inProgress","closed","_s","isOver","drop","accept","item","addItemToColumn","id","collect","monitor","tasksByStatus","prevTasks","updatedTasks","map","task","localStorage","setItem","JSON","stringify","columnClass","toLowerCase","className","ref","style","backgroundColor","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/rohanrao/Downloads/elitefit1-main/src/components/TaskColumn.js"],"sourcesContent":["// TaskColumn.js\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { useDrop } from 'react-dnd';\nimport './TaskColumn.css';\n\nconst TaskColumn = ({ status, tasks, setTasks, todos, inProgress, closed }) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: \"task\",\n    drop: (item) => addItemToColumn(item.id),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  let tasksByStatus = todos;\n  if (status === \"Overdue\") tasksByStatus = inProgress;\n  if (status === \"Completed\") tasksByStatus = closed;\n\n  tasksByStatus = tasksByStatus || [];\n\n  const addItemToColumn = (id) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.map((task) =>\n        task.id === id ? { ...task, status } : task\n      );\n\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n\n      return updatedTasks;\n    });\n  };\n\n  // Dynamic class based on status\n  const columnClass = `col ${status.toLowerCase()}`;\n\n  return (\n    <div className={columnClass} ref={drop} style={{ backgroundColor: isOver ? '#f0f8ff' : '' }}>\n      <h1>{status.toUpperCase()}</h1>\n      <div className=\"taskList\">\n        {tasksByStatus.length > 0 ? (\n          tasksByStatus.map((task) => (\n            <TaskItem key={task.id} task={task} tasks={tasks} setTasks={setTasks} />\n          ))\n        ) : (\n          <p className=\"empty-column\">No tasks</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskColumn;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGZ,OAAO,CAAC,OAAO;IACxCa,MAAM,EAAE,MAAM;IACdD,IAAI,EAAGE,IAAI,IAAKC,eAAe,CAACD,IAAI,CAACE,EAAE,CAAC;IACxCC,OAAO,EAAGC,OAAO,KAAM;MACrBP,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,IAAIQ,aAAa,GAAGZ,KAAK;EACzB,IAAIH,MAAM,KAAK,SAAS,EAAEe,aAAa,GAAGX,UAAU;EACpD,IAAIJ,MAAM,KAAK,WAAW,EAAEe,aAAa,GAAGV,MAAM;EAElDU,aAAa,GAAGA,aAAa,IAAI,EAAE;EAEnC,MAAMJ,eAAe,GAAIC,EAAE,IAAK;IAC9BV,QAAQ,CAAEc,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAGD,SAAS,CAACE,GAAG,CAAEC,IAAI,IACtCA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGO,IAAI;QAAEnB;MAAO,CAAC,GAAGmB,IACzC,CAAC;MAEDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,YAAY,CAAC,CAAC;MAE3D,OAAOA,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMO,WAAW,GAAG,OAAOxB,MAAM,CAACyB,WAAW,CAAC,CAAC,EAAE;EAEjD,oBACE3B,OAAA;IAAK4B,SAAS,EAAEF,WAAY;IAACG,GAAG,EAAEnB,IAAK;IAACoB,KAAK,EAAE;MAAEC,eAAe,EAAEtB,MAAM,GAAG,SAAS,GAAG;IAAG,CAAE;IAAAuB,QAAA,gBAC1FhC,OAAA;MAAAgC,QAAA,EAAK9B,MAAM,CAAC+B,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BrC,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAI,QAAA,EACtBf,aAAa,CAACqB,MAAM,GAAG,CAAC,GACvBrB,aAAa,CAACG,GAAG,CAAEC,IAAI,iBACrBrB,OAAA,CAACH,QAAQ;QAAewB,IAAI,EAAEA,IAAK;QAAClB,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA;MAAS,GAAtDiB,IAAI,CAACP,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiD,CACxE,CAAC,gBAEFrC,OAAA;QAAG4B,SAAS,EAAC,cAAc;QAAAI,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5CIP,UAAU;EAAA,QACaH,OAAO;AAAA;AAAAyC,EAAA,GAD9BtC,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}